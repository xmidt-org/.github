# SPDX-FileCopyrightText: 2022 Comcast Cable Communications Management, LLC
# SPDX-License-Identifier: Apache-2.0
---
name: '~go-updater-template'

on:
  workflow_call:
    inputs:

      go-version:
        description: "The go version to use.  Example: '1.18.x'"
        required: false
        type: string
        default: '1.18.x'
      working-directory:
        description: 'The working directory for this project.'
        required: false
        type: string
        default: .

jobs:
  maintain_prerequisites:
    runs-on: [ ubuntu-latest ]
    name: Update prerequisite code
    steps:
      - name: Workflow Version
        run: |
          echo "Version 1.0.1"

      - name: Job Context Information
        uses: hmarr/debug-action@v2

      - name: Setup go version
        uses: actions/setup-go@v2
        with:
          go-version: ${{ inputs.go-version }}

      # --vvv-- Cache Setup & Checkout --vvv--
      - name: Setup go cache paths
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
      # --^^^-- Cache Setup & Checkout --^^^--

      - name: Find the latest dependency packages
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        run: |
          go get -u -t -d ./...
          go mod tidy

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          title: Update the dependencies
          body: |
            Update the prerequisites code to prevent bit-rot.
          branch: update-dependencies
          token: ${{ secrets.PR_ACTION_TOKEN }}
          delete-branch: true
