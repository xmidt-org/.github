# SPDX-FileCopyrightText: 2021 Comcast Cable Communications Management, LLC
# SPDX-License-Identifier: Apache-2.0

name: Meson C Unit Test

on:
  workflow_call:
    inputs:
      packages:
        description: 'The optional list of ubuntu packages to install prior to building.'
        type: string
        required: false
      brew-extra:
        description: 'The optional list of environment variables needed to find the brew packages when meson looks.'
        type: string
        required: false
      brew-packages:
        description: 'The optional list of brew (MacOS) packages to install prior to building.'
        type: string
        required: false
    secrets:
      sonar_login:
        description: 'The sonarcloud login token.'
        required: true

jobs:
  test-macos:
    name: Unit Tests (MacOS)
    runs-on: [ macos-latest ]
    steps:
      - uses: actions/checkout@v3

      - name: Install packages
        run: |
          brew install cunit ninja ${{ inputs.brew-packages }}

      - name: Install Meson
        run: |
          pip3 install 'meson>=0.60.3'

      - name: Meson Setup
        run: |
          ${{ inputs.brew-extra }} meson setup --warnlevel 3 --werror build

      - name: Build
        working-directory: build
        run: |
          ninja all

      - name: Run Tests
        working-directory: build
        run: |
          ninja test

  test-linux-clang:
    name: Unit Tests (Linux clang)
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v3

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get -y install python3 python3-pip python3-setuptools python3-wheel \
                                  ninja-build valgrind gcovr \
                                  libcunit1 libcunit1-doc libcunit1-dev \
                                  ${{ inputs.packages }}

      - name: Install Meson
        run: |
          pip3 install --user 'meson>=0.60.3'

      - name: Meson Setup
        run: |
          CC=clang meson setup --warnlevel 3 --werror build

      - name: Build
        working-directory: build
        run: |
          ninja all

      - name: Run Tests
        working-directory: build
        run: |
          ninja test

  test-linux-gcc:
    name: Unit Tests (Linux gcc)
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get -y install python3 python3-pip python3-setuptools python3-wheel \
                                  ninja-build valgrind gcovr \
                                  libcunit1 libcunit1-doc libcunit1-dev \
                                  ${{ inputs.packages }}

      - name: Install Meson
        run: |
          pip3 install --user 'meson>=0.60.3'

      - name: Meson Setup
        run: |
          meson setup --warnlevel 3 --werror build

      - name: Get Sonarcloud Binaries
        uses: xmidt-org/sonarcloud-installer-action@v1
        with:
          working-directory: build

      - name: Update .sonar-project.properties
        run: |
          # Warn if we find something that shouldn't be in the sonar file.
          if [[ -n `grep ".*sonar.cfamily.build-wrapper-output.*" .sonar-project.properties` ]]; then
              echo -e "\e[0;31mWarning: remove this from the .sonar-project.properties file: sonar.cfamily.build-wrapper-output\e[m"
          fi
          if [[ -n `grep ".*sonar.cfamily.threads.*" .sonar-project.properties` ]]; then
              echo -e "\e[0;31mWarning: remove this from the .sonar-project.properties file: sonar.cfamily.threads\e[m"
          fi
          if [[ -n `grep ".*sonar.cfamily.cache.enabled.*" .sonar-project.properties` ]]; then
              echo -e "\e[0;31mWarning: remove this from the .sonar-project.properties file: sonar.cfamily.cache.enabled\e[m"
          fi
          if [[ -n `grep ".*sonar.coverageReportPaths.*" .sonar-project.properties` ]]; then
              echo -e "\e[0;31mWarning: remove this from the .sonar-project.properties file: sonar.coverageReportPaths\e[m"
          fi

          # Remove the lines we want to replace
          sed -i 's/.*sonar.cfamily.build-wrapper-output.*//g' .sonar-project.properties
          sed -i 's/.*sonar.cfamily.threads.*//g'              .sonar-project.properties
          sed -i 's/.*sonar.cfamily.cache.enabled.*//g'        .sonar-project.properties
          sed -i 's/.*sonar.coverageReportPaths.*//g'          .sonar-project.properties

          # Add the version we need.
          echo "sonar.cfamily.build-wrapper-output=build/bw-output"       >> .sonar-project.properties
          echo "sonar.cfamily.threads=2"                                  >> .sonar-project.properties
          echo "sonar.cfamily.cache.enabled=false"                        >> .sonar-project.properties
          echo "sonar.coverageReportPaths=build/meson-logs/sonarqube.xml" >> .sonar-project.properties

      - name: Build
        working-directory: build
        run: |
          build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output ninja all

      - name: Run Tests
        working-directory: build
        run: |
          ninja test

      - name: Generate Coverage Report
        working-directory: build
        run: |
          ninja coverage

      - name: Upload SonarCloud
        run: |
          build/sonar-scanner/bin/sonar-scanner -Dsonar.host.url=https://sonarcloud.io \
                                                -Dproject.settings=.sonar-project.properties \
                                                -Dsonar.login=${{ secrets.sonar_login }}
        env:
          # Required by the sonar-scanner program
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Codecov.io
        uses: codecov/codecov-action@v3
        with:
          directory: .
          files: build/meson-logs/coverage.xml
          fail_ci_if_error: true
