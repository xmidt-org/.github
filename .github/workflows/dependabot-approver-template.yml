# SPDX-FileCopyrightText: 2023 Comcast Cable Communications Management, LLC
# SPDX-License-Identifier: Apache-2.0
---
name: '~dependabot-approver-template'

# Note: The caller needs to use/provide these in their workflow:
#
# on: pull_request_target
# permissions:
#   pull-requests: write
#   contents: write

on:
  workflow_call:
    inputs:
      max-semver:
        description: "The maximum semver level to approve. [options: minor, patch]"
        required: false
        type: string
        default: 'minor'

jobs:
  dependabot:
    runs-on: ubuntu-latest
    # Checking the actor will prevent your Action run failing on non-Dependabot
    # PRs but also ensures that it only does work for Dependabot PRs.
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      # This first step will fail if there's no metadata and so the approval
      # will not occur.
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v1.3.6
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      # Here the PR gets approved.
      - name: Approve a PR
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Finally, this sets the PR to allow auto-merging for patch and minor
      # updates if all checks pass
      - name: Enable auto-merge for Dependabot PRs
        if: |
          ( inputs.max-semver == 'minor' &&
            steps.dependabot-metadata.outputs.update-type == 'version-update:semver-minor' ||
            steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch') ||
          ( inputs.max-semver == 'patch' &&
            steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch')
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
