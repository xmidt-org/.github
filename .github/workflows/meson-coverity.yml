# SPDX-FileCopyrightText: 2021 Comcast Cable Communications Management, LLC
# SPDX-License-Identifier: Apache-2.0

name: Coverity Check

on:
  workflow_call:
    inputs:
      packages:
        description: 'The optional list of ubuntu packages to install prior to building.'
        type: string
      repo:
        description: 'The GITHUB_REPOSITORY variable.'
        type: string
        required: true
      email:
        description: 'The email of the coverity manager.'
        type: string
        default: 'weston_schmidt@alumni.purdue.edu'
      sha:
        description: 'The GITHUB_SHA variable.'
        type: string
        required: true
    secrets:
      coverity_key:
        description: 'The Coverity key.'
        required: true
      token:
        description: 'The GITHUB_TOKEN.'
        required: true

jobs:
  coverity:
    name: Coverity Check
    runs-on: [ ubuntu-latest ]
    steps: 
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Update packages
        run: |
          sudo apt update

      - name: Install packages
        run: |
          sudo apt-get -y install python3 python3-pip python3-setuptools python3-wheel \
                                  ninja-build valgrind gcovr \
                                  libcunit1 libcunit1-doc libcunit1-dev \
                                  ${{ inputs.packages }}

      - name: Install Meson
        run: |
          pip3 install --user 'meson>=0.59.0'

      - name: Make Build Directory
        run: |
          mkdir build

      - name: Get Coverity Binaries
        uses: xmidt-org/coverity-installer-action@v2
        with:
          working-directory: build
          token: ${{ secrets.coverity_key }}
          repo: ${{ inputs.repo }}

      - name: Meson Build
        run: |
          meson build

      - name: Prebuild
        working-directory: build
        run: |
          ninja all

      - name: Clean
        working-directory: build
        run: |
          ninja clean

      - name: Coverity Analysis
        working-directory: build
        run: |
          ./coverity/bin/cov-build --dir cov-int ninja coverity

      - name: Archive Results
        working-directory: build
        run: |
          tar czvf coverity.tgz cov-int

      - name: Upload Results
        working-directory: build
        env:
          COVERITY_SECRET: ${{ secrets.coverity_key }}
        run: |
          curl --form token=$COVERITY_SECRET \
               --form email=${{ inputs.email }} \
               --form file=@coverity.tgz \
               --form version="${{ inputs.sha }}" \
               --form description="`date`" \
               "https://scan.coverity.com/builds?project=${{ inputs.repo }}//\//\%2F}"
